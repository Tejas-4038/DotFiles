import { Application } from './proto/application';
import * as wm from './proto/wm';
export declare namespace WindowManagement {
    type Window = {
        id: string;
        active: boolean;
        bounds: {
            position: {
                x: number;
                y: number;
            };
            size: {
                height: number;
                width: number;
            };
        };
        workspaceId?: string;
        application?: Application;
    };
    type Workspace = {
        id: string;
        name: string;
        monitorId: string;
        active: boolean;
    };
}
/**
 */
declare class WindowManagementImpl {
    ping(): Promise<boolean>;
    getWindows(options?: wm.GetWindowsRequest): Promise<WindowManagement.Window[]>;
    getActiveWorkspace(): Promise<WindowManagement.Workspace>;
    getWorkspaces(): Promise<WindowManagement.Workspace[]>;
    getWindowsOnActiveWorkspace(): Promise<WindowManagement.Window[]>;
    setWindowBounds(payload: wm.SetWindowBoundsRequest): Promise<void>;
    getActiveWindow(): Promise<WindowManagement.Window>;
}
export declare const WindowManagement: WindowManagementImpl;
export {};
